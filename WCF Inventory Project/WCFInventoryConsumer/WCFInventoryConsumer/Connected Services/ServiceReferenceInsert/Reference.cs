//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFInventoryConsumer.ServiceReferenceInsert {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesmanBO", Namespace="http://schemas.datacontract.org/2004/07/BusinessObject")]
    [System.SerializableAttribute()]
    public partial class SalesmanBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityOfSalesmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionOfSalesmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOfSalesmanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityOfSalesman {
            get {
                return this.CityOfSalesmanField;
            }
            set {
                if ((object.ReferenceEquals(this.CityOfSalesmanField, value) != true)) {
                    this.CityOfSalesmanField = value;
                    this.RaisePropertyChanged("CityOfSalesman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionOfSalesman {
            get {
                return this.CommissionOfSalesmanField;
            }
            set {
                if ((this.CommissionOfSalesmanField.Equals(value) != true)) {
                    this.CommissionOfSalesmanField = value;
                    this.RaisePropertyChanged("CommissionOfSalesman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOfSalesman {
            get {
                return this.NameOfSalesmanField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOfSalesmanField, value) != true)) {
                    this.NameOfSalesmanField = value;
                    this.RaisePropertyChanged("NameOfSalesman");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderBO", Namespace="http://schemas.datacontract.org/2004/07/BusinessObject")]
    [System.SerializableAttribute()]
    public partial class OrderBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOfCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOfSalesmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurchaseAmountOfOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfOrder {
            get {
                return this.DateOfOrderField;
            }
            set {
                if ((this.DateOfOrderField.Equals(value) != true)) {
                    this.DateOfOrderField = value;
                    this.RaisePropertyChanged("DateOfOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOfCustomer {
            get {
                return this.IdOfCustomerField;
            }
            set {
                if ((this.IdOfCustomerField.Equals(value) != true)) {
                    this.IdOfCustomerField = value;
                    this.RaisePropertyChanged("IdOfCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOfSalesman {
            get {
                return this.IdOfSalesmanField;
            }
            set {
                if ((this.IdOfSalesmanField.Equals(value) != true)) {
                    this.IdOfSalesmanField = value;
                    this.RaisePropertyChanged("IdOfSalesman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurchaseAmountOfOrder {
            get {
                return this.PurchaseAmountOfOrderField;
            }
            set {
                if ((this.PurchaseAmountOfOrderField.Equals(value) != true)) {
                    this.PurchaseAmountOfOrderField = value;
                    this.RaisePropertyChanged("PurchaseAmountOfOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerBO", Namespace="http://schemas.datacontract.org/2004/07/BusinessObject")]
    [System.SerializableAttribute()]
    public partial class CustomerBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityOfCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeOfCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOfSalesmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOfCustomerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityOfCustomer {
            get {
                return this.CityOfCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CityOfCustomerField, value) != true)) {
                    this.CityOfCustomerField = value;
                    this.RaisePropertyChanged("CityOfCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GradeOfCustomer {
            get {
                return this.GradeOfCustomerField;
            }
            set {
                if ((this.GradeOfCustomerField.Equals(value) != true)) {
                    this.GradeOfCustomerField = value;
                    this.RaisePropertyChanged("GradeOfCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOfSalesman {
            get {
                return this.IdOfSalesmanField;
            }
            set {
                if ((this.IdOfSalesmanField.Equals(value) != true)) {
                    this.IdOfSalesmanField = value;
                    this.RaisePropertyChanged("IdOfSalesman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOfCustomer {
            get {
                return this.NameOfCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOfCustomerField, value) != true)) {
                    this.NameOfCustomerField = value;
                    this.RaisePropertyChanged("NameOfCustomer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceInsert.IWCFInsertService")]
    public interface IWCFInsertService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFInsertService/InsertNewSalesman", ReplyAction="http://tempuri.org/IWCFInsertService/InsertNewSalesmanResponse")]
        int InsertNewSalesman(WCFInventoryConsumer.ServiceReferenceInsert.SalesmanBO salesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFInsertService/InsertNewSalesman", ReplyAction="http://tempuri.org/IWCFInsertService/InsertNewSalesmanResponse")]
        System.Threading.Tasks.Task<int> InsertNewSalesmanAsync(WCFInventoryConsumer.ServiceReferenceInsert.SalesmanBO salesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFInsertService/InsertNewOrder", ReplyAction="http://tempuri.org/IWCFInsertService/InsertNewOrderResponse")]
        int InsertNewOrder(WCFInventoryConsumer.ServiceReferenceInsert.OrderBO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFInsertService/InsertNewOrder", ReplyAction="http://tempuri.org/IWCFInsertService/InsertNewOrderResponse")]
        System.Threading.Tasks.Task<int> InsertNewOrderAsync(WCFInventoryConsumer.ServiceReferenceInsert.OrderBO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFInsertService/InsertNewCustomer", ReplyAction="http://tempuri.org/IWCFInsertService/InsertNewCustomerResponse")]
        int InsertNewCustomer(WCFInventoryConsumer.ServiceReferenceInsert.CustomerBO customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFInsertService/InsertNewCustomer", ReplyAction="http://tempuri.org/IWCFInsertService/InsertNewCustomerResponse")]
        System.Threading.Tasks.Task<int> InsertNewCustomerAsync(WCFInventoryConsumer.ServiceReferenceInsert.CustomerBO customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFInsertServiceChannel : WCFInventoryConsumer.ServiceReferenceInsert.IWCFInsertService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFInsertServiceClient : System.ServiceModel.ClientBase<WCFInventoryConsumer.ServiceReferenceInsert.IWCFInsertService>, WCFInventoryConsumer.ServiceReferenceInsert.IWCFInsertService {
        
        public WCFInsertServiceClient() {
        }
        
        public WCFInsertServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFInsertServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFInsertServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFInsertServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertNewSalesman(WCFInventoryConsumer.ServiceReferenceInsert.SalesmanBO salesman) {
            return base.Channel.InsertNewSalesman(salesman);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewSalesmanAsync(WCFInventoryConsumer.ServiceReferenceInsert.SalesmanBO salesman) {
            return base.Channel.InsertNewSalesmanAsync(salesman);
        }
        
        public int InsertNewOrder(WCFInventoryConsumer.ServiceReferenceInsert.OrderBO order) {
            return base.Channel.InsertNewOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewOrderAsync(WCFInventoryConsumer.ServiceReferenceInsert.OrderBO order) {
            return base.Channel.InsertNewOrderAsync(order);
        }
        
        public int InsertNewCustomer(WCFInventoryConsumer.ServiceReferenceInsert.CustomerBO customer) {
            return base.Channel.InsertNewCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewCustomerAsync(WCFInventoryConsumer.ServiceReferenceInsert.CustomerBO customer) {
            return base.Channel.InsertNewCustomerAsync(customer);
        }
    }
}
